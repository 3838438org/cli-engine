---
version: 2
executorType: docker
containerInfo:
  - image: dickeyxxx/cli-engine:latest
stages:
  build:
    workDir: ~/cli-engine
    environment:
      - CIRCLE_PROJECT_USERNAME: heroku
      - CIRCLE_PROJECT_REPONAME: cli-engine
      - HEROKU_DEBUG: 1
    steps:
      - type: checkout
      - type: cache-restore
        key: cli-engine-{{checksum "package.json"}}
      - type: shell
        command: |
          set -exu

          export PATH=./node_modules/.bin:$PATH
          # setup yarn
          yarn
          cd ~/cli-engine/example && yarn add heroku/cli-engine#$CIRCLE_SHA1 && yarn

          # test project
          cd ~/cli-engine
          JEST_JUNIT_OUTPUT=/tmp/test-results/jest/junit.xml jest --coverage --testResultsProcessor jest-junit
          flow check
          standard
          bash <(curl -s https://codecov.io/bash)
          ./bin/run version

          # test/build example project
          cd ~/cli-engine/example
          ./bin/run version
          ./bin/run help
          ./bin/run cli:test
          yarn run build linux-x64 beta

          # show files in npm pack
          cd ~/cli-engine
          npm pack
          tar xvzf cli-engine*.tgz
          rm -rf package
          mkdir -p /tmp/artifacts
          mv cli-engine*.tgz /tmp/artifacts/cli-engine.tgz
      - type: test-results-store
        path: /tmp/test-results
      - type: artifacts-store
        path: /tmp/artifacts
        destination: build
      - type: cache-save
        key: cli-engine-{{checksum "package.json"}}
        paths:
          - /usr/local/share/.cache/yarn
  deploy:
    workDir: ~/cli-engine
    steps:
      - /usr/local/share/.cache/yarn
      - type: deploy
        shell: /bin/bash
        command: |
          set -exu
          if [ "${CIRCLE_BRANCH}" == "master" ];
            cd example && npm run release beta
          fi
